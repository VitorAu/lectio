name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: db_user
          POSTGRES_PASSWORD: db_password
          POSTGRES_DB: db_name
        ports:
        - "5432:5432"
        options: >-
          --health-cmd="pg_isready -U db_user -d db_name" --health-interval=10s --health-timeout=5s --health-retries=5

    env:
      DB_PORT: 5432
      DB_USER: db_user
      DB_PASSWORD: db_password
      DB_NAME: db_name
      JWT_SECRET: jwt_secret

    steps:
    - uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: npm

    - name: Install dependencies
      run: npm ci --include=dev

    - name: Run knex migrations
      run: npm run knex:latest

    - name: Run tests
      run: npm test

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Install dependencies
      run: npm ci --include=dev

    - name: Build application
      run: npm run build

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: dist/

  notify:
    runs-on: ubuntu-latest
    needs: [ test, build ]
    if: always()

    steps:
    - name: Install dependencies
      run: sudo apt update && sudo apt install mailutils

    - name: Send email notification
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.SMTP_EMAIL_SENDER }}
        password: ${{ secrets.SMTP_PASSWORD_SENDER }}
        subject: >
          [LECTIO] Pipeline ${{ needs.test.result == 'success' && needs.build.result == 'success' && 'SUCCESS ✅' || 'FAIL ❌' }}
        to: ${{ secrets.SMTP_EMAIL_RECEIVER }}
        from: GitHub Actions <${{ secrets.SMTP_EMAIL_SENDER }}>
        body: |
          Projeto: Lectio
          Branch: ${{ github.ref }}
          Commit: ${{ github.sha }}
          Autor: ${{ github.actor }}
          Data: $(date)

          Jobs executados:
          - Test: ${{ needs.test.result }}
          - Build: ${{ needs.build.result }}
