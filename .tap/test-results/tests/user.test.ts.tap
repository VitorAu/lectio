TAP version 14
# Subtest: GET `/api/users` - find all users with mock data
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - data should be an array
âœ¨ Full response: {
  "status": "success",
  "message": "Users found successfully",
  "data": [
    {
      "id": "1",
      "name": "test",
      "username": "test",
      "email": "test@test.com",
      "birthdate": "1990-05-15T03:00:00.000Z",
      "password": "test"
    }
  ]
}
    1..4
ok 1 - GET `/api/users` - find all users with mock data # time=56.669ms

# Subtest: GET `/api/users/:id` - find user by id with mock data
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - data should be an array
âœ¨ Full response: {
  "status": "success",
  "message": "User found successfully",
  "data": [
    {
      "id": "1",
      "name": "test",
      "username": "test",
      "email": "test@test.com",
      "birthdate": "1990-05-15T03:00:00.000Z",
      "password": "test"
    }
  ]
}
    1..4
ok 2 - GET `/api/users/:id` - find user by id with mock data # time=10.009ms

# Subtest: GET `/api/users/email/:email` - find user by email with mock data
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - data should be an array
âœ¨ Full response: {
  "status": "success",
  "message": "User found successfully",
  "data": [
    {
      "id": "1",
      "name": "test",
      "username": "test",
      "email": "test@test.com",
      "birthdate": "1990-05-15T03:00:00.000Z",
      "password": "test"
    }
  ]
}
    1..4
ok 3 - GET `/api/users/email/:email` - find user by email with mock data # time=9.369ms

# Subtest: GET `/api/users/username/:username` - find user by username with mock data
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - data should be an array
âœ¨ Full response: {
  "status": "success",
  "message": "User found successfully",
  "data": [
    {
      "id": "1",
      "name": "test",
      "username": "test",
      "email": "test@test.com",
      "birthdate": "1990-05-15T03:00:00.000Z",
      "password": "test"
    }
  ]
}
    1..4
ok 4 - GET `/api/users/username/:username` - find user by username with mock data # time=11.458ms

# Subtest: PATCH `/api/users/:id` - update user info with mock data
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - data should be an array
âœ¨ Full response: {
  "status": "success",
  "message": "User info updated successfully",
  "data": [
    {
      "id": "1",
      "name": "test",
      "username": "test",
      "email": "test@test.com",
      "birthdate": "1990-05-15T03:00:00.000Z",
      "password": "test"
    }
  ]
}
    1..4
ok 5 - PATCH `/api/users/:id` - update user info with mock data # time=21.302ms

# Subtest: PUT `/api/users/:id/password` - update user password with mock data
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - data should be an array
âœ¨ Full response: {
  "status": "success",
  "message": "User password updated successfully",
  "data": [
    {
      "id": "1",
      "name": "test",
      "username": "test",
      "email": "test@test.com",
      "birthdate": "1990-05-15T03:00:00.000Z",
      "password": "test"
    }
  ]
}
    1..4
ok 6 - PUT `/api/users/:id/password` - update user password with mock data # time=1511.168ms

# Subtest: POST `/api/users/:id/password` - create user with mock data
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - data should be an object
âœ¨ Full response: {
  "status": "success",
  "message": "User created successfully",
  "data": {
    "id": "1",
    "name": "test",
    "username": "test",
    "email": "test@test.com",
    "birthdate": "1990-05-15T03:00:00.000Z",
    "password": "test"
  }
}
    1..4
ok 7 - POST `/api/users/:id/password` - create user with mock data # time=42.908ms

[18:37:50.163] [32mINFO[39m (on Vitors-MacBook-Air.local): [36mincoming request[39m
    [35mreqId[39m: "req-1"
    [35mreq[39m: {
      "method": "GET",
      "url": "/api/users",
      "host": "localhost:80",
      "remoteAddress": "127.0.0.1"
    }
[18:37:50.167] [32mINFO[39m (on Vitors-MacBook-Air.local): [36mrequest completed[39m
    [35mreqId[39m: "req-1"
    [35mres[39m: {
      "statusCode": 200
    }
    [35mresponseTime[39m: 3.259040951728821
[18:37:50.190] [32mINFO[39m (on Vitors-MacBook-Air.local): [36mincoming request[39m
    [35mreqId[39m: "req-1"
    [35mreq[39m: {
      "method": "GET",
      "url": "/api/users/email/test@test.com",
      "host": "localhost:80",
      "remoteAddress": "127.0.0.1"
    }
[18:37:50.181] [32mINFO[39m (on Vitors-MacBook-Air.local): [36mincoming request[39m
    [35mreqId[39m: "req-1"
    [35mreq[39m: {
      "method": "GET",
      "url": "/api/users/1",
      "host": "localhost:80",
      "remoteAddress": "127.0.0.1"
    }
[18:37:50.191] [32mINFO[39m (on Vitors-MacBook-Air.local): [36mrequest completed[39m
    [35mreqId[39m: "req-1"
    [35mres[39m: {
      "statusCode": 200
    }
    [35mresponseTime[39m: 0.4552499055862427
[18:37:50.181] [32mINFO[39m (on Vitors-MacBook-Air.local): [36mrequest completed[39m
    [35mreqId[39m: "req-1"
    [35mres[39m: {
      "statusCode": 200
    }
    [35mresponseTime[39m: 0.45875000953674316
[18:37:50.203] [32mINFO[39m (on Vitors-MacBook-Air.local): [36mincoming request[39m
    [35mreqId[39m: "req-1"
    [35mreq[39m: {
      "method": "GET",
      "url": "/api/users/username/test",
      "host": "localhost:80",
      "remoteAddress": "127.0.0.1"
    }
[18:37:50.203] [32mINFO[39m (on Vitors-MacBook-Air.local): [36mrequest completed[39m
    [35mreqId[39m: "req-1"
    [35mres[39m: {
      "statusCode": 200
    }
    [35mresponseTime[39m: 0.2583749294281006
[18:37:50.239] [32mINFO[39m (on Vitors-MacBook-Air.local): [36mincoming request[39m
    [35mreqId[39m: "req-1"
    [35mreq[39m: {
      "method": "PUT",
      "url": "/api/users/1/password",
      "host": "localhost:80",
      "remoteAddress": "127.0.0.1"
    }
[18:37:51.734] [32mINFO[39m (on Vitors-MacBook-Air.local): [36mrequest completed[39m
    [35mreqId[39m: "req-1"
    [35mres[39m: {
      "statusCode": 200
    }
    [35mresponseTime[39m: 1494.5037500858307
[18:37:50.219] [32mINFO[39m (on Vitors-MacBook-Air.local): [36mincoming request[39m
    [35mreqId[39m: "req-1"
    [35mreq[39m: {
      "method": "PATCH",
      "url": "/api/users/1",
      "host": "localhost:80",
      "remoteAddress": "127.0.0.1"
    }
[18:37:50.224] [32mINFO[39m (on Vitors-MacBook-Air.local): [36mrequest completed[39m
    [35mreqId[39m: "req-1"
    [35mres[39m: {
      "statusCode": 200
    }
    [35mresponseTime[39m: 4.091416001319885
[18:37:51.774] [32mINFO[39m (on Vitors-MacBook-Air.local): [36mincoming request[39m
    [35mreqId[39m: "req-1"
    [35mreq[39m: {
      "method": "POST",
      "url": "/api/users",
      "host": "localhost:80",
      "remoteAddress": "127.0.0.1"
    }
[18:37:51.776] [32mINFO[39m (on Vitors-MacBook-Air.local): [36mrequest completed[39m
    [35mreqId[39m: "req-1"
    [35mres[39m: {
      "statusCode": 200
    }
    [35mresponseTime[39m: 1.4064579010009766
1..7
